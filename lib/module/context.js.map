{"version":3,"sources":["context.ts"],"names":["React","context","createContext","showActionSheetWithOptions","options","callback","useActionSheet","useContext","Provider","Consumer"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAOA,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,aAAN,CAA6B,CAC3CC,0BAA0B,CAAE,oCAACC,OAAD,CAA8BC,QAA9B,CAAgE,CAAE,CADnD,CAA7B,CAAhB,CAIA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC/B,MAAON,CAAAA,KAAK,CAACO,UAAN,CAAiBN,OAAjB,CAAP,CACD,C,GAEOO,CAAAA,Q,CAAuBP,O,CAAvBO,Q,CAAUC,Q,CAAaR,O,CAAbQ,Q,CAElB,OAASD,QAAT,CAAmBC,QAAnB","sourcesContent":["import * as React from 'react';\nimport { ActionSheetOptions } from './types';\n\nexport interface Context {\n  showActionSheetWithOptions: (options: ActionSheetOptions, callback: (i: number) => void) => void;\n}\n\nconst context = React.createContext<Context>({\n  showActionSheetWithOptions: (options: ActionSheetOptions, callback: (i: number) => void) => {},\n});\n\nexport function useActionSheet() {\n  return React.useContext(context);\n}\n\nconst { Provider, Consumer } = context;\n\nexport { Provider, Consumer };\n"]}